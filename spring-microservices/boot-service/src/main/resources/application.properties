logging.level.org.hibernate=DEBUG
spring.jpa.show-sql=true
logging.pattern.console= %clr(%d{HH:mm:ss.SSS}){faint}%clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([%15.15t]){faint} %clr(%-20.20logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}

#// original
#spring.datasource.url=jdbc:h2:mem:
#spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:p6spy:h2:mem:
spring.datasource.driver-class-name=com.p6spy.engine.spy.P6SpyDriver
spring.datasource.username=sa
spring.datasource.password=sa
# degeaba il pui pe asta aici, ce incarca config-client de pe server castiga (are precedenta)

management.endpoints.web.exposure.include=*

# define the destination to which the input MessageChannel should be bound
spring.cloud.stream.bindings.input.destination = reservations

# ensures 1 node in a group gets message (point-to-point, not a broadcast)
spring.cloud.stream.bindings.input.group = reservations-group

# ensure that the Q is durable
#spring.cloud.stream.bindings.input.durableSubscription = true