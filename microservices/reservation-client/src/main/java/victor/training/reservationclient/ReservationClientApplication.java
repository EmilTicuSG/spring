package victor.training.reservationclient;

import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import java.util.List;
import java.util.stream.Collectors;

@SpringBootApplication
@RestController
public class ReservationClientApplication {

	public static void main(String[] args) {
		SpringApplication.run(ReservationClientApplication.class, args);
	}

	@GetMapping
	public String getReservationNames() {
		RestTemplate rest = new RestTemplate();

		var exchange = rest.exchange("http://localhost:8080/reservations", HttpMethod.GET, HttpEntity.EMPTY,
			new ParameterizedTypeReference<List<ReservationDto>>() {
			});// awful code to tell to .exchange the fact that I expect back a List<stuff>

		return exchange.getBody().stream()
			.map(ReservationDto::getName)
			.collect(Collectors.joining(","));

	}
	@GetMapping("create")
	public void createReservation(@RequestParam String name) {
		RestTemplate rest = new RestTemplate();

		ReservationDto dto = new ReservationDto();
		dto.name = name;
		rest.postForEntity("http://localhost:8080/reservations", dto, Void.class);

	}

}



class ReservationDto { // ideally generated by swagger-gen maven plugin from a yaml PUBLISHED by reservation-microserviced
	// in an API management system
	public Long id;
	public String name;

	public String getName() {
		return name;
	}
}
