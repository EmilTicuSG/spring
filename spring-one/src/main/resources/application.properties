logging.level.victor=DEBUG
logging.level.p6spy=DEBUG
logging.level.com.p6spy=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.graphql=DEBUG

# lists all the HTTP endpoints
#logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=TRACE

logging.pattern.console=%d{HH:mm:ss.SSS} %-12.12thread %-20.20logger{0} %message%n
#default = isolated, in-memory cache
#spring.cache.type=ehcache

spring.datasource.url = jdbc:p6spy:h2:tcp://localhost:9092/~/test
#spring.datasource.url = jdbc:p6spy:h2:mem:private
#spring.datasource.url = jdbc:p6spy:h2:tcp://localhost:9092/nio:~/source/db/database/db
#spring.datasource.driver-class-name=com.p6spy.engine.spy.P6SpyDriver

spring.cache.type=redis

management.endpoint.prometheus.enabled=true
#management.endpoints.web.exposure.include=*

#used when monitoring cache metrics @see CacheMetricsConfig
#spring.cache.cache-names=user-data


custom-executor.core-pool-size=10
custom-executor.max-pool-size=10
custom-executor.thread-name-prefix=custom-

#spring.datasource.url = jdbc:h2:tcp://localhost:9092/nio:~/source/db/database/db
spring.datasource.driver-class-name= com.p6spy.engine.spy.P6SpyDriver
#spring.datasource.driver-class-name= org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=sa
spring.jpa.hibernate.ddl-auto=create

#trick: disables web nature for all the Spring Boot Apps for auto-shutdown (except SpaApplication - see application-spa.properties)
spring.main.web-application-type=none

welcome.welcomeMessage=Welcome to This Spring Realm
welcome.help.app-id=1251
welcome.help.file=c:/help-file.pdf
welcome.supportUrls=http://google.com,  http://stackoverflow.com,http://baeldung.com,http://spring.io
welcome.localContactPhone.RO=+401312121414
welcome.localContactPhone.FR=+430123414123
#TODO add working-hours string per country (only in .yml)


barman.count = 10
beer.count = 1
vodka.count = 3
#structured.map={'k1':'v1', 'k2':'v2'}   #if using SpEL

#Queues
spring.cloud.stream.bindings.q1out.destination=q1
spring.cloud.stream.bindings.q1in.destination=q1
spring.cloud.stream.bindings.q1in.group=q1group

spring.cloud.stream.bindings.q2in.destination=q2
spring.cloud.stream.bindings.q2out.destination=q2
spring.cloud.stream.bindings.q2in.group=q2group
