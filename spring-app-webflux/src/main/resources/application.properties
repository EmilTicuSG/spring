spring.application.name=app
#logging.pattern.console=%d{HH:mm:ss.SSS} %-12.12thread %-30.30logger{0} %message%n
logging.level.victor=DEBUG
#print request header (eg for CORS debugging)
logging.level.victor.training.spring.web.controller.util.HttpRequestFilterPrintingHeaders=DEBUG
logging.level.p6spy=DEBUG
logging.level.com.p6spy=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.graphql=DEBUG
#logging.level.org.springframework=DEBUG

#spring.cache.type=simple #default = isolated, in-memory cache

bar.pool.size=10
beer.pool.size=2
vodka.pool.size=10

management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.endpoint.health.show-details=always

teacher.bio.uri.base=http://localhost:8082
spring.datasource.hikari.connection-timeout=1000

#used when monitoring cache metrics @see CacheMetricsConfig
#spring.cache.cache-names=user-data
#spring.datasource.hikari.maximum-barPool-size=40
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

custom-executor.core-pool-size=10
custom-executor.max-pool-size=10
custom-executor.thread-name-prefix=custom-

spring.datasource.url = jdbc:h2:tcp://localhost:9092/~/test
spring.datasource.driver-class-name= org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=sa
spring.jpa.hibernate.ddl-auto=create

welcome.welcome-message=abc
welcome.help.app-id=1251
welcome.help.file=/Users/victorrentea/workspace/spring/spring-app/pom.xml
welcome.supportUrls=http://google.com,  http://stackoverflow.com,http://baeldung.com,http://spring.io
welcome.localContactPhone.RO=+401312121414
welcome.localContactPhone.FR=+430123414123
#TODO add working-hours string per country (only in .yml)

logging.on=false

logging.level.org.springframework.data.r2dbc=DEBUG
logging.level.io.r2dbc.h2.QUERY=DEBUG
#logging.level.io.r2dbc.h2.PARAM=DEBUG
#logging.level.io.r2dbc.h2=DEBUG

#spring.cache.type=

#SSO with KeyCloak
keycloak.auth-server-url=http://localhost:8180/auth
keycloak.realm=LearningRealm
keycloak.resource=spring-app
keycloak.public-client=false
keycloak.principal-attribute=preferred_username
keycloak.credentials.secret=4RGOpyZP6dJrfJG7JsB8G3Kd7JeaHfR9

#see the backchannel
#logging.level.org.keycloak=DEBUG
#logging.level.org.apache.http=DEBUG

#Client Crdentials: this app calling spring-micro
rest.security.issuer-uri=http://localhost:8180/auth/realms/LearningRealm
security.oauth2.client.client-id=spring-app
security.oauth2.client.client-secret=9khAtKBemUzhZ9jXxFZyz3CmlntKJO23
security.oauth2.client.user-authorization-uri=${rest.security.issuer-uri}/protocol/openid-connect/auth
security.oauth2.client.access-token-uri=${rest.security.issuer-uri}/protocol/openid-connect/token
security.oauth2.client.scope=openid
security.oauth2.client.grant-type=client_credentials

#bug in Spring Boot 2.6 + Keycoak https://stackoverflow.com/questions/70207564/spring-boot-2-6-regression-how-can-i-fix-keycloak-circular-dependency-in-adapte
spring.main.allow-circular-references=true

# Experiment: create and send JWT tokens to APIs
jwt.signature.shared.secret.base64=c2VjcmV0TWFyZQ==